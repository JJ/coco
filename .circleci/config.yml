version: 2

on:
  push:
    branches-ignore:
      - 'gh-pages'
    paths-ignore:
      - 'README.md'

jobs:

  test_ubuntu_rolling_python3:
    docker:
      - image: ubuntu:rolling
        environment:
          CC: gcc
    working_directory: ~/coco
    steps:
      - checkout
      - run:
          name: Update apt-get
          command: apt-get update -qy
      - run:
          name: Set time zone
          command: ln -fs /usr/share/zoneinfo/Europe/Paris /etc/localtime
      - run:
          name: Install python-dev with apt-get
          command: DEBIAN_FRONTEND=noninteractive apt-get install -y libpython3-dev
      - run:
          name: Install conda
          command: |
            apt-get install -y wget
            mkdir -p ~/miniconda3
            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh
            bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
            rm -rf ~/miniconda3/miniconda.sh
            ~/miniconda3/bin/conda init bash
            source ~/.bashrc
      - run:
          name: Create Python 3.10 environment and install packages with conda
          command: |          
            source ~/miniconda3/etc/profile.d/conda.sh
            conda create -n py310 -y python=3.10
            conda activate py310
            conda install -y matplotlib numpy setuptools six scipy pytest cython
      - run:
          name: Install build-essential with apt-get
          command: apt-get install -y build-essential
      - run:
          name: Install git with apt-get
          command: apt-get install -y git
      - run:
          name: Install cargo with apt-get
          command: apt-get install -y rust-all
      - run:
          name: Install libclang for bindgen with apt-get
          command: apt-get install -y libclang-dev
#      - run:
#          name: Install tkinter with apt-get
#          command: apt-get install -y python3-tk
      - run:
          name: Install coco python
          command: |
            source ~/miniconda3/etc/profile.d/conda.sh
            conda activate py310
            python do.py run-python install-user
      - run:
          name: Install coco post-processing
          command: python do.py install-postprocessing install-user
      - run:
          name: Run the example experiment
          command: |
            cd ~/coco/code-experiments/build/python
            python example_experiment.py bbob
      - run:
          name: Post-process the results
          command: |
            cd ~/coco/code-experiments/build/python
            python -m cocopp -o ./postproc ./exdata
      - run:
          name: Run coco Python 3 tests
          command: python do.py test-python
          no_output_timeout: 1800
      - run:
          name: Install plocate
          command: |
            apt-get install -y plocate
            updatedb
      - run:
          name: Install octave for octave tests
          command: |
            DEBIAN_FRONTEND=noninteractive apt-get install -y liboctave-dev
#            updatedb
      - run:
          name: Run coco octave tests
          command: python do.py test-octave
          no_output_timeout: 1800
      - run:
          name: Install jdk for java tests
          command: |
            apt-get install -y openjdk-17-jdk
            updatedb
      - run:
          name: Run coco java tests
          command: python do.py test-java
          no_output_timeout: 1800
      - run:
          name: Run coco pre-processing tests
          command: python do.py test-preprocessing install-user
          no_output_timeout: 1800
      - run:
          name: Run coco post-processing tests
          command: python do.py test-postprocessing install-user
          no_output_timeout: 5400
      - run:
          name: Run coco C
          command: python do.py run-c
      - run:
          name: Run coco C tests
          command: python do.py test-c
          no_output_timeout: 1800
      - run:
          name: Run coco Rust
          command: |
            export PATH=~/.cargo/bin:$PATH
            python do.py run-rust
      - run:
          name: Run coco Rust tests
          command: |
            export PATH=~/.cargo/bin:$PATH
            python do.py test-rust
          no_output_timeout: 1800
      - run:
          name: Run regression test
          command: python do.py test-suites
          no_output_timeout: 1800



workflows:

  version: 2
  test-matrix:
    jobs:
      - test_ubuntu_rolling_python3

