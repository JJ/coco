version: 2

on:
  push:
    branches-ignore:
      - 'gh-pages'
    paths-ignore:
      - 'README.md'

jobs:

  test_ubuntu_rolling_python3:
    docker:
      - image: ubuntu:rolling
        environment:
          CC: gcc
    working_directory: ~/coco
    steps:
      - checkout
      - run:
          name: Update apt-get
          command: apt-get update -qy
      - run:
          name: Set time zone
          command: ln -fs /usr/share/zoneinfo/Europe/Paris /etc/localtime
      - run:
          name: Install conda
          command: |
            # Install our public GPG key to trusted store
            curl https://repo.anaconda.com/pkgs/misc/gpgkeys/anaconda.asc | gpg --dearmor > conda.gpg
            install -o root -g root -m 644 conda.gpg /usr/share/keyrings/conda-archive-keyring.gpg
            # Check whether fingerprint is correct (will output an error message otherwise)
            gpg --keyring /usr/share/keyrings/conda-archive-keyring.gpg --no-default-keyring --fingerprint 34161F5BF5EB1D4BFBBB8F0A8AEB4F8B29D82806
            # Add our Debian repo
            echo "deb [arch=amd64 signed-by=/usr/share/keyrings/conda-archive-keyring.gpg] https://repo.anaconda.com/pkgs/misc/debrepo/conda stable main" > /etc/apt/sources.list.d/conda.list *NB:* If you receive a Permission denied error when trying to run the above command (because `/etc/apt/sources.list.d/conda.list` is write protected), try using the following command instead:
            echo "deb [arch=amd64 signed-by=/usr/share/keyrings/conda-archive-keyring.gpg] https://repo.anaconda.com/pkgs/misc/debrepo/conda stable main" | sudo tee -a /etc/apt/sources.list.d/conda.list
            apt-get install -y conda
      - run:
          name: Install python-dev with apt-get
          command: DEBIAN_FRONTEND=noninteractive apt-get install -y libpython3-dev
      - run:
          name: Create Python 3.10 environment
          command: |          
            apt-get install -y virtualenv
            mkdir ~/python-environments && cd ~/python-environments
            virtualenv py310 --python=python3.10
            source py310/bin/activate
            cd
      - run:
          name: Install pip with apt-get
          command: apt-get install -y python3-pip
      - run:
          name: Install build-essential with apt-get
          command: apt-get install -y build-essential
      - run:
          name: Install git with apt-get
          command: apt-get install -y git
      - run:
          name: Install cargo with apt-get
          command: apt-get install -y rust-all
      - run:
          name: Install libclang for bindgen with apt-get
          command: apt-get install -y libclang-dev
#      - run:
#          name: Install tkinter with apt-get
#          command: apt-get install -y python3-tk
      - run:
          name: Install python packages with apt-get
          command: apt-get install -y python3-matplotlib python3-numpy 
                        python3-setuptools python3-six python3-scipy 
                        python3-pytest cython3
      - run:
          name: Create symbolic link to python binaries
          command: ln -s /usr/bin/python3 /usr/bin/python
      - run:
          name: Install coco python
          command: python3 do.py run-python install-user
      - run:
          name: Install coco post-processing
          command: python3 do.py install-postprocessing install-user
      - run:
          name: Run the example experiment
          command: |
            cd ~/coco/code-experiments/build/python
            python3 example_experiment.py bbob
      - run:
          name: Post-process the results
          command: |
            cd ~/coco/code-experiments/build/python
            python3 -m cocopp -o ./postproc ./exdata
      - run:
          name: Run coco Python 3 tests
          command: python3 do.py test-python
          no_output_timeout: 1800
      - run:
          name: Install plocate
          command: |
            apt-get install -y plocate
            updatedb
      - run:
          name: Install octave for octave tests
          command: |
            DEBIAN_FRONTEND=noninteractive apt-get install -y liboctave-dev
#            updatedb
      - run:
          name: Run coco octave tests
          command: python3 do.py test-octave
          no_output_timeout: 1800
      - run:
          name: Install jdk for java tests
          command: |
            apt-get install -y openjdk-17-jdk
            updatedb
      - run:
          name: Run coco java tests
          command: python3 do.py test-java
          no_output_timeout: 1800
      - run:
          name: Run coco pre-processing tests
          command: python3 do.py test-preprocessing install-user
          no_output_timeout: 1800
      - run:
          name: Run coco post-processing tests
          command: python3 do.py test-postprocessing install-user
          no_output_timeout: 5400
      - run:
          name: Run coco C
          command: python do.py run-c
      - run:
          name: Run coco C tests
          command: python do.py test-c
          no_output_timeout: 1800
      - run:
          name: Run coco Rust
          command: |
            export PATH=~/.cargo/bin:$PATH
            python do.py run-rust
      - run:
          name: Run coco Rust tests
          command: |
            export PATH=~/.cargo/bin:$PATH
            python do.py test-rust
          no_output_timeout: 1800
      - run:
          name: Run regression test
          command: python do.py test-suites
          no_output_timeout: 1800



workflows:

  version: 2
  test-matrix:
    jobs:
      - test_ubuntu_rolling_python3

